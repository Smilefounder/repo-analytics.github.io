{"version":3,"sources":["utils/userSignedIn.js","utils/http.js","components/ProjectCard.js","components/Footer.js","components/CardLoader.js","pages/Home.js","components/AddRepo.js","pages/User.js","components/VisitChart.js","components/CloneChart.js","components/RepoLoader.js","components/ReferrerChart.js","components/PathChart.js","components/TrafficAnalytics.js","components/StarHistoryChart.js","components/StarLocationChart.js","components/StarAnalytics.js","components/RepoSetting.js","components/RepoNav.js","pages/Repo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","set","username","token","photo","window","localStorage","setItem","JSON","stringify","get","user","userRaw","getItem","parse","err","remove","removeItem","http","axios","create","baseURL","timeout","headers","getUserRepos","a","res","data","repos","getRepoTraffic","repoPath","traffic","getRepoStars","addRepo","post","ProjectCard","repo","createdAt","views","ref","useRef","totalViewsData","map","view","x","timestamp","y","count","uniqueViewsData","uniques","useEffect","current","chartXkcd","XY","datasets","label","options","xTickCount","yTickCount","legendPosition","config","positionType","upLeft","showLine","timeFormat","dotSize","dataColors","className","href","slice","Footer","class","MyLoader","height","width","speed","primaryColor","secondaryColor","rx","ry","Home","useState","setRepos","isLoading","setIsLoading","then","data-show-count","aria-label","CardLoader","AddRepo","localUser","userSignedIn","setRepoPath","location","alert","type","text","response","stay","time","position","placeholder","onChange","e","target","value","onClick","User","match","params","userLocal","VisitChart","svg","document","querySelector","clones","clone","Article","Referrer","referrers","console","log","referrer","Paths","paths","path","Traffic","trafficData","setTrafficData","catch","RepoLoader","date","repoCreatedAt","CloneChart","ReferrerChart","PathChart","StarHistoryChart","history","notAddingUp","isAdding","setIsAdding","dates","Object","keys","counts","values","i","length","style","float","backgroundColor","borderRadius","border","color","cursor","StarLocationChart","locations","locationsKeys","totalCount","reduce","pre","cur","topLocations","sort","b","topCounts","othersCount","Pie","labels","innerRadius","starData","setstarData","updatedAt","Setting","Nav","selectedTab","Repo","useRouteMatch","useLocation","RepoNav","TrafficAnalytics","StarAnalytics","About","Topics","to","url","component","Topic","exact","render","topicId","Boolean","hostname","ReactDOM","search","userFromSearch","queryString","replaceState","title","origin","pathname","src","alt","fontSize","reload","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ff5f1e09.chunk.js","sourcesContent":["/**\n * user: {\n *   username: 'timqian',\n *   token: '',\n *   photo: '',\n * }\n */\n\nfunction set({ username, token, photo }) {\n  window.localStorage.setItem('user', JSON.stringify({\n    username, token, photo\n  }))\n}\n\nfunction get() {\n  let user = {};\n  const userRaw = window.localStorage.getItem('user');\n  if (userRaw) {\n    try {\n      user = JSON.parse(userRaw);\n    } catch (err) {}\n  }\n  return user;\n}\n\nfunction remove() {\n  window.localStorage.removeItem('user');\n}\n\nmodule.exports = {\n  set,\n  get,\n  remove,\n};","import axios from 'axios';\n\nconst userRaw = window.localStorage.getItem('user');\n\nlet token;\nif (userRaw) {\n  const user = JSON.parse(userRaw);\n  token = user.token;\n}\n\nconst http = axios.create({\n  baseURL: 'https://repo-analytics.t9t.io/',\n  // baseURL: 'http://localhost:8080/',\n  timeout: 20000,\n  headers: {\n    token,\n  },\n});\n \nconst getUserRepos = async (username) => {\n  const res = await http.get(`/user/${username}`);\n  return res.data.repos;\n}\n\n/**\n * \n * @param {String} repoPath \n * @param {String} startDate \n * @param {String} endDate \n */\nconst getRepoTraffic = async ({repoPath}) => {\n  const res = await http.get(`/repo/${repoPath}`);\n  return res.data.traffic;\n}\n\nconst getRepoStars = async ({repoPath}) => {\n  const res = await http.get(`/repo/${repoPath}/stars`);\n  return res.data;\n}\n\nconst addRepo = async ({username, repoPath, token}) => {\n  const res = await http.post('/repo/add', {\n    username, repoPath, token,\n  });\n  return res.data;\n}\n\nexport default {\n  getUserRepos,\n  getRepoTraffic,\n  getRepoStars,\n  addRepo,\n};\n\n\n// test\n// getRepoStars({repoPath: 'timqian/star-history'})","import React, { useRef, useEffect } from 'react';\nimport chartXkcd from 'chart.xkcd';\nimport './ProjectCard.css';\n\n\nconst ProjectCard = ({repo, createdAt, username, views}) => {\n\n  const ref = useRef();\n  const totalViewsData = views.map(view => ({\n    x: view.timestamp,\n    y: view.count,\n  }));\n  const uniqueViewsData = views.map(view => ({\n    x: view.timestamp,\n    y: view.uniques,\n  }));\n  \n  useEffect(() => {\n    if (ref.current) {\n      new chartXkcd.XY(ref.current, {\n        // title: 'Visitors',\n        data: {\n          datasets: [{\n            label: 'Views',\n            data: totalViewsData,\n          }, {\n            label: 'Unique Visitors',\n            data: uniqueViewsData,\n          }],\n        },\n        options: {\n          xTickCount: 3,\n          yTickCount: 4,\n          legendPosition: chartXkcd.config.positionType.upLeft,\n          showLine: true,\n          timeFormat: 'MM/DD/YYYY',\n          dotSize: 0.5,\n          dataColors: ['#28a745', '#005cc5'],\n          // unxkcdify: true\n        },\n      });\n    }\n  }, []);\n\n  return   <div className=\"card-container\">\n  <div className=\"card-description\">\n    <a href={`/${repo}`}>{repo}</a>\n  </div>\n\n  <div className=\"project-trend\">\n    <svg ref={ref}></svg>\n  </div>\n\n  <div className=\"card-footer\">\n    Recoding analytics since {createdAt.slice(0, 10)}\n  </div>\n</div>\n};\n\nexport default ProjectCard;","import React from 'react';\nimport './Footer.css'\n\nconst Footer = () => (\n  <footer>\n    <div className=\"footer-content\">\n      A <a href=\"https://t9t.io\">t9t</a> project build by <a href=\"https://timqian.com\">timqian</a>\n    </div>\n    <div className=\"footer-contacts\">\n      <a href=\"https://github.com/timqian\"><i class=\"ri-github-line\"></i></a>\n      <a href=\"https://twitter.com/tim_qian\"><i class=\"ri-twitter-line\"></i></a>\n      <a href=\"https://join.slack.com/t/t9tio/shared_invite/enQtNjgzMzkwMDM0NTE3LTE5ZTUzYjU4Y2I0YzRiZjNkYTkzMzE1ZmM0NDdmYzRlZmMxNGY1MzZlN2EwYjYyNWVlMWY0Nzk2MDBhNWZlY2I\"><i class=\"ri-slack-line\"></i></a>\n      <a href=\"https://raw.githubusercontent.com/timqian/images/master/3811553342733_.pic.jpg\"><i class=\"ri-wechat-2-line\"></i></a>\n      <a href=\"mailto:timqian@t9t.io\"><i class=\"ri-mail-line\"></i></a>\n    </div>\n  </footer>\n)\n\nexport default Footer;\n","import React from \"react\"\nimport ContentLoader from \"react-content-loader\"\n\nconst MyLoader = () => (\n  <ContentLoader \n    height={220}\n    width={900}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#d6d6d6\"\n  >\n    <rect x=\"9\" y=\"19\" rx=\"0\" ry=\"0\" width=\"432\" height=\"179\" /> \n    <rect x=\"460\" y=\"19\" rx=\"0\" ry=\"0\" width=\"426\" height=\"179\" /> \n    <rect x=\"494\" y=\"24\" rx=\"0\" ry=\"0\" width=\"0\" height=\"13\" /> \n    <rect x=\"394\" y=\"85\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n  </ContentLoader>\n)\n\nexport default MyLoader;","import React, { useEffect, useState } from \"react\";\nimport http from '../utils/http';\nimport ProjectCard from '../components/ProjectCard';\nimport './Home.css';\nimport Footer from '../components/Footer';\nimport GitHubButton from 'react-github-btn'\nimport CardLoader from '../components/CardLoader';\n\nfunction Home ({user}) {\n\n  const [repos, setRepos] = useState([]);\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    http.getUserRepos('timqian')\n      .then(repos => {\n        setRepos(repos);\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <div className=\"home-main\">\n      <div className=\"home-hero\">\n        <div className=\"home-github-btn\">\n          <GitHubButton href=\"https://github.com/repo-analytics/repo-analytics.github.io\" data-show-count=\"true\" aria-label=\"Star repo-analytics/repo-analytics.github.io on GitHub\">Star</GitHubButton>\n        </div>\n        <h1 className=\"home-slogan\">\n          Thorough analytics for your GitHub repos\n        </h1>\n        <div className=\"home-features\">\n          <div className=\"home-feature\">\n            <h4 className=\"home-feature-title\">Better traffic data</h4>\n            <p className=\"home-feature-description\">\n              Track traffic to GitHub Repos for longer than 14 days.\n            </p>\n          </div>\n          <div className=\"home-feature\">\n            <h4 className=\"home-feature-title\">Understand your users</h4>\n            <p className=\"home-feature-description\">\n              Analyze history, locations of Star, Watch... data of your GitHub Repos\n            </p>\n          </div>\n          <div className=\"home-feature\">\n            <h4 className=\"home-feature-title\">What do you care?</h4>\n            <p className=\"home-feature-description\">\n              Suggest new features for Repo Analytics on \n              &nbsp;\n              <a href=\"https://github.com/repo-analytics/repo-analytics.github.io/issues\">GitHub</a>\n            </p>\n          </div>\n        </div>\n        <br/>\n        <br/>\n        {\n          !user.username ?\n          <a className=\"home-signin-btn\" href=\"https://repo-analytics.t9t.io/auth/github\">Sign in with GitHub</a>\n          : ''\n        }\n      </div>\n\n      <div className=\"home-container\">\n        <h2 className=\"home-example-title\">Example repos using <strong>Repo Analytics</strong></h2>\n        { isLoading ? <CardLoader/> : ''}\n\n        <div className=\"home-examples\">\n          {\n            repos.map(repo => <div className=\"home-box\">\n              <ProjectCard repo={repo.repo} username={repo.username} createdAt={repo.createdAt} views={repo.views}/>\n            </div>)\n          }\n\n        </div>\n\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default Home;","import React, { useState } from \"react\";\nimport http from \"../utils/http\";\nimport userSignedIn from '../utils/userSignedIn';\nimport './AddRepo.css';\nimport { alert } from 'notie';\n\n\nconst AddRepo = () => {\n  const localUser = userSignedIn.get();\n  const [repoPath, setRepoPath] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n  async function addRepo () {\n    try {\n      setIsLoading(true);\n      await http.addRepo({ username: localUser.username, repoPath, token: localUser.token });\n      window.location = `/${repoPath}`;\n    } catch (err) {\n      setIsLoading(false);\n      alert({\n        type: 'error', // optional, default = 4, enum: [1, 2, 3, 4, 5, 'success', 'warning', 'error', 'info', 'neutral']\n        text: `Failed: \"${err.response.data}\"`,\n        stay: false, // optional, default = false\n        time: 3, // optional, default = 3, minimum = 1,\n        position: 'top' // optional, default = 'top', enum: ['top', 'bottom']\n      })\n    }\n  }\n\n  return <div className=\"home-box\">\n    <div className=\"add-new\">\n\n      <input placeholder={`e.g. ${localUser.username}/repo-name`} className=\"repo-input\" onChange={(e) => setRepoPath(e.target.value)}></input>\n      <button className={`${isLoading ? 'isLoading' : ''} add-repo-btn`} onClick={() => addRepo()}>\n        {isLoading ? 'Adding' : 'Add repo'}\n      </button>\n      <div className=\"add-new-footer\">\n        <a href=\"https://github.com/repo-analytics/repo-analytics.github.io/issues/1\">Pricing</a>\n      </div>\n    </div>\n\n  </div>;\n}\n\nexport default AddRepo;","import React, { useEffect, useState } from \"react\";\nimport http from '../utils/http';\nimport ProjectCard from '../components/ProjectCard';\nimport './User.css';\nimport userSignedIn from '../utils/userSignedIn';\nimport CardLoader from '../components/CardLoader';\nimport AddRepo from '../components/AddRepo';\nimport Footer from '../components/Footer';\n\nfunction User ({ match }) {\n  const username = match.params.username;\n  const userLocal = userSignedIn.get();\n  const [repos, setRepos] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    http.getUserRepos(username)\n      .then(repos => {\n        setRepos(repos);\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <div className=\"home-container\">\n      <h1 className=\"user-title\">\n        Repos of&nbsp;\n        <a className=\"user-github-link\" href={`https://github.com/${username}`}>\n          {username}\n        </a>\n        <a className=\"user-github-link\" href={`https://github.com/${username}`}>\n          <i className=\"ri-github-line\"></i>\n        </a>\n      </h1>\n      { isLoading ? <CardLoader/> : ''}\n      <div className=\"home-examples\">\n        {\n          repos.map(repo => <div className=\"home-box\">\n            <ProjectCard repo={repo.repo} username={repo.username} createdAt={repo.createdAt} views={repo.views}/>\n          </div>)\n        }\n\n        {\n          userLocal.username === username ?\n            <AddRepo /> : ''\n        }\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default User;","import React, { useEffect } from 'react';\nimport chartXkcd from 'chart.xkcd';\nimport './VisitChart.css';\n\nconst VisitChart = ({ views }) => {\n  const totalViewsData = views.map(view => ({\n    x: view.timestamp,\n    y: view.count,\n  }));\n  const uniqueViewsData = views.map(view => ({\n    x: view.timestamp,\n    y: view.uniques,\n  }));\n  useEffect(() => {\n    const svg = document.querySelector('.visit-chart');\n    new chartXkcd.XY(svg, {\n      // title: 'Visitors',\n      data: {\n        datasets: [{\n          label: 'Views',\n          data: totalViewsData,\n        }, {\n          label: 'Unique Visitors',\n          data: uniqueViewsData,\n        }],\n      },\n      options: {\n        xTickCount: 3,\n        yTickCount: 4,\n        legendPosition: chartXkcd.config.positionType.upLeft,\n        showLine: true,\n        timeFormat: 'MM/DD/YYYY',\n        dotSize: 0.5,\n        dataColors: ['#28a745', '#005cc5'],\n        // unxkcdify: true\n      },\n    });\n  }, []);\n\n  return <div className=\"chart-container\">\n  <h3 className=\"chart-container-header\"> Visitors </h3>\n  <div className=\"svg-container\">\n    <svg className=\"visit-chart\"></svg>\n  </div>\n</div>\n}\n\nexport default VisitChart;\n","import React, { useEffect } from 'react';\nimport chartXkcd from 'chart.xkcd';\n\nconst VisitChart = ({ clones }) => {\n\n  const totalViewsData = clones.map(clone => ({\n    x: clone.timestamp,\n    y: clone.count,\n  }));\n  const uniqueViewsData = clones.map(clone => ({\n    x: clone.timestamp,\n    y: clone.uniques,\n  }));\n  useEffect(() => {\n    const svg = document.querySelector('.clone-chart');\n    new chartXkcd.XY(svg, {\n      // title: 'Git clones',\n      data: {\n        datasets: [{\n          label: 'Clones',\n          data: totalViewsData,\n        }, {\n          label: 'Unique Clones',\n          data: uniqueViewsData,\n        }],\n      },\n      options: {\n        xTickCount: 3,\n        yTickCount: 4,\n        legendPosition: chartXkcd.config.positionType.upLeft,\n        showLine: true,\n        timeFormat: 'MM/DD/YYYY',\n        dotSize: 0.5,\n        dataColors: ['#28a745', '#005cc5'],\n        // unxkcdify: true // TODO: configuable\n      },\n    });\n  }, []);\n\n  return <div className=\"chart-container\">\n    <h3 className=\"chart-container-header\"> Git clones </h3>\n    <div className=\"svg-container\">\n      <svg className=\"clone-chart\"></svg>\n    </div>\n  </div>\n}\n\nexport default VisitChart;\n","import React from 'react'\nimport ContentLoader from 'react-content-loader'\n\nconst Article = () => (\n  <ContentLoader\n    height={160}\n    width={400}\n    speed={1}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n  >\n    <rect x=\"0\" y=\"13\" rx=\"4\" ry=\"4\" width=\"400\" height=\"9\" />\n    <rect x=\"0\" y=\"29\" rx=\"4\" ry=\"4\" width=\"100\" height=\"8\" />\n    <rect x=\"0\" y=\"50\" rx=\"4\" ry=\"4\" width=\"400\" height=\"10\" />\n    <rect x=\"0\" y=\"65\" rx=\"4\" ry=\"4\" width=\"400\" height=\"10\" />\n    <rect x=\"0\" y=\"79\" rx=\"4\" ry=\"4\" width=\"100\" height=\"10\" />\n    <rect x=\"0\" y=\"99\" rx=\"5\" ry=\"5\" width=\"400\" height=\"200\" />\n  </ContentLoader>\n)\n\nexport default Article;","import React from 'react';\n\nconst Referrer = ({referrers}) => {\n\n  console.log('referrers', referrers)\n  return (\n    <div className=\"chart-container\">\n      <h3 className=\"chart-container-header\"> Referring sites </h3>\n      <table>\n        <thead>\n          <tr>\n            <th>Site</th>\n            <th>Views</th>\n            <th>Unique visitors</th>\n          </tr>\n        </thead>\n        <tbody>\n          {referrers.map(referrer => <tr>\n            <td>{referrer.referrer}</td>\n            <td>{referrer.count}</td>\n            <td>{referrer.uniques}</td>\n          </tr>)}\n        </tbody>\n      </table>\n    </div>\n)};\n\nexport default Referrer;","import React from 'react';\n\nconst Paths = ({paths}) => (\n  <div className=\"chart-container\">\n    <h3 className=\"chart-container-header\"> Popular content </h3>\n    <table>\n      <thead>\n        <tr>\n          <th>Content</th>\n          <th>Views</th>\n          <th>Unique visitors</th>\n        </tr>\n      </thead>\n      <tbody>\n        {paths.map(path => <tr>\n          <td><a href={`https://github.com/${path.path}`}>{path.path}</a></td>\n          <td>{path.count}</td>\n          <td>{path.uniques}</td>\n        </tr>)}\n      </tbody>\n    </table> \n  </div>\n);\n\nexport default Paths;\n","import React, { useEffect, useState } from \"react\";\nimport VisitChart from './VisitChart';\nimport CloneChart from './CloneChart';\nimport RepoLoader from \"./RepoLoader\";\nimport ReferrerChart from \"./ReferrerChart\";\nimport PathChart from \"./PathChart\";\nimport http from '../utils/http';\n\nconst Traffic = ({ repoPath }) => {\n  const [trafficData, setTrafficData] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    http.getRepoTraffic({\n      repoPath,\n    })\n      .then(traffic => {\n        setTrafficData(traffic);\n        setIsLoading(false);\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  if (isLoading || !trafficData) {\n    return <div className=\"repo-container\">\n      <RepoLoader/>\n    </div>\n  }\n\n  return (<div className=\"repo-container\">\n    <div className=\"dates-container\">\n      <p>Updated at {trafficData.date}</p>\n      <p>Recoding analytics since {trafficData.repoCreatedAt.slice(0, 10)}</p>\n    </div> \n\n    <div className=\"repo-ref-paths-container\">\n      <div className=\"one-ref-path\">\n        <VisitChart views={trafficData.views}/> \n      </div>\n      <div className=\"one-ref-path\">\n        <CloneChart clones={trafficData.clones}/>\n      </div>\n    </div>\n\n\n    <div className=\"repo-ref-paths-container\">\n      <div className=\"one-ref-path\">\n        <ReferrerChart referrers={trafficData.referrers}/>\n      </div>\n      <div className=\"one-ref-path\">\n        <PathChart paths={trafficData.paths}/>\n      </div>\n    </div>\n  </div>);\n}\n\nexport default Traffic;","import React, { useState, useEffect } from 'react';\nimport chartXkcd from 'chart.xkcd';\nimport './VisitChart.css';\n\nconst StarHistoryChart = ({ repo, history, notAddingUp}) => {\n\n  const [isAdding, setIsAdding] = useState(true)\n  const dates = Object.keys(history);\n  let counts = Object.values(history);\n  if(isAdding) {\n    for(let i = 1; i < counts.length; i++) {\n      counts[i] = counts[i-1]+ counts[i]\n    }\n  }\n  const data = dates.map((date, i) => ({\n    x: date,\n    y: counts[i],\n  }));\n\n  useEffect(() => {\n    const svg = document.querySelector('.star-history-chart');\n    new chartXkcd.XY(svg, {\n      data: {\n        datasets: [{\n          label: repo,\n          data,\n        }],\n      },\n      options: {\n        xTickCount: 3,\n        yTickCount: 4,\n        legendPosition: chartXkcd.config.positionType.upLeft,\n        showLine: true,\n        timeFormat: 'YYYY-MM-DD',\n        dotSize: 0.3,\n        dataColors: ['#28a745'],\n        // unxkcdify: true\n      },\n    });\n  });\n\n  return <div className=\"chart-container\">\n  <h3 className=\"chart-container-header\"> \n    Star History   \n    <button onClick={() => setIsAdding(!isAdding)} style={{float:'right', backgroundColor:'white', borderRadius:'3px',border:'1px solid #ccc', color:'#555', cursor: 'pointer'}}> {isAdding ? 'Growth' : 'Total'} </button>\n  </h3>\n\n  <div className=\"svg-container\">\n    <svg className=\"star-history-chart\"></svg>\n  </div>\n</div>\n}\n\nexport default StarHistoryChart;\n","import React, { useEffect } from 'react';\nimport chartXkcd from 'chart.xkcd';\nimport './VisitChart.css';\n\nconst StarLocationChart = ({ locations }) => {\n\n  const locationsKeys = Object.keys(locations);\n  const counts = Object.values(locations);\n  const totalCount = counts.reduce((pre, cur) => pre + cur);\n  const topLocations = locationsKeys.sort((a, b)=> locations[b] - locations[a]).slice(0, 6);\n  const topCounts = counts.sort((a, b) => b - a).slice(0, 6);\n  const othersCount = totalCount - topCounts.reduce((pre, cur) => pre + cur);\n\n  useEffect(() => {\n    const svg = document.querySelector('.star-location-chart');\n    new chartXkcd.Pie(svg, {\n      data: {\n        labels: [...topLocations, 'others'],\n        datasets: [{\n          data: [...topCounts, othersCount],\n        }],\n      },\n      options: {\n        innerRadius: 0.5,\n        // unxkcdify: true\n      },\n    });\n  }, []);\n\n  return <div className=\"chart-container\">\n  <h3 className=\"chart-container-header\"> \n    Star Locations\n  </h3>\n\n  <p className=\"location-description\">{totalCount} valid locations detected</p>\n  <div className=\"svg-container\">\n    <svg className=\"star-location-chart\"></svg>\n  </div>\n</div>\n}\n\nexport default StarLocationChart;\n","import React, { useEffect, useState } from \"react\";\nimport RepoLoader from \"./RepoLoader\";\nimport http from '../utils/http';\nimport StarHistoryChart from \"./StarHistoryChart\";\nimport StarLocationChart from \"./StarLocationChart\";\n\nconst Traffic = ({ repoPath }) => {\n  const [starData, setstarData] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    http.getRepoStars({\n      repoPath,\n    })\n      .then(traffic => {\n        setstarData(traffic);\n        setIsLoading(false);\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  if (isLoading || !starData) {\n    return <div className=\"repo-container\">\n      <h2>Here we analyse history and location statics of your repo. </h2>\n      <p>You might need to wait for a minute or two and refresh the page if your repo have too many stars and it is the first time you open this page</p>\n      <RepoLoader/>\n    </div>\n  }\n\n  return (<div className=\"repo-container\">\n    <div className=\"dates-container\">\n      <p>Updated at {starData.updatedAt.slice(0,10)}</p>\n    </div> \n\n    <div className=\"repo-ref-paths-container\">\n      <div className=\"one-ref-path\">\n        {\n          Object.keys(starData.history).length !== 0 \n            ? <StarHistoryChart repo={starData.repo} history={starData.history}/>\n            : ''\n        }\n      </div>\n      <div className=\"one-ref-path\">\n      {\n          Object.keys(starData.locations).length !== 0 \n            ? <StarLocationChart locations={starData.locations}/>\n            : ''\n        }\n\n      </div>\n    </div>\n\n\n  </div>);\n}\n\nexport default Traffic;\n","import React from 'react';\nimport './RepoSetting.css';\n\nconst Setting = () => (\n  <div className=\"repo-container\">\n    <div className=\"traffic-switch\">\n      <label className=\"switch\">\n        <input type=\"checkbox\"/>\n        <span className=\"slider round\"></span>\n      </label>\n      &nbsp; Make traffic data private\n    </div>\n  </div>\n)\n\nexport default Setting;\n","import React from \"react\";\nconst Nav = ({repoPath, selectedTab}) => {\n  return (\n    <div className=\"repo-header\">\n      <div className=\"repo-container\">\n        <h1 className=\"repo-title\">\n          <a className=\"user-link\" href={`/${repoPath}`}>\n            {repoPath}\n          </a>\n          <a className=\"user-github-link\" href={`https://github.com/${repoPath}`}>\n            <i className=\"ri-github-line\"></i>\n          </a>   \n        </h1>\n        <nav className=\"repo-nav\">\n          <a href className={selectedTab === 0 ? 'selected' : ''} href={`/${repoPath}/traffic`}>Traffic</a>\n          <a href className={selectedTab === 1 ? 'selected' : ''} href={`/${repoPath}/stars`}>Stars</a>\n          {/* <a href className={selectedTab === 2 ? 'selected' : ''} href={`/${repoPath}/settings`}>Settings</a> */}\n        </nav>\n      </div>\n    </div>\n  );\n};\n\nexport default Nav;","import TrafficAnalytics from '../components/TrafficAnalytics'; \nimport StarAnalytics from '../components/StarAnalytics'; \nimport RepoSetting from '../components/RepoSetting'; \nimport RepoNav from '../components/RepoNav'; \n\nimport './Repo.css';\nimport React from \"react\";\nimport Footer from '../components/Footer';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams,\n  useLocation,\n} from \"react-router-dom\";\n\nfunction Repo () {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const username = match.params.username;\n  const repo = match.params.repo;\n  const repoPath = `${username}/${repo}`\n\n  return (\n    <div >\n      <Switch>\n        <Route path={`${match.path}/traffic`}>\n          <RepoNav repoPath={repoPath} selectedTab={0} />\n          <TrafficAnalytics repoPath={repoPath}/>\n        </Route>\n        <Route path={`${match.path}/stars`}>\n          <RepoNav repoPath={repoPath} selectedTab={1} />\n          <StarAnalytics repoPath={repoPath}/>\n        </Route>\n        <Route path={`${match.path}/settings`}>\n          <RepoNav repoPath={repoPath} selectedTab={2} />\n          <RepoSetting />\n        </Route>\n        <Route path={`${match.path}`}>\n          <RepoNav repoPath={repoPath} selectedTab={0} />\n          <TrafficAnalytics repoPath={repoPath}/>\n        </Route>\n      </Switch>\n\n      <div className=\"repo-container\">\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default Repo;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport './App.css';\nimport Home from './pages/Home';\nimport User from './pages/User';\nimport Repo from './pages/Repo';\nimport queryString from 'query-string';\nimport userSignedIn from './utils/userSignedIn';\n\nexport default function App() {\n  let user = userSignedIn.get();\n\n  if (window.location.search.length > 0) {\n    try {\n      const userFromSearch = queryString.parse(window.location.search);\n      userSignedIn.set({\n        username: userFromSearch.username,\n        token: userFromSearch.token,\n        photo: userFromSearch.photo\n      });\n      user = userSignedIn.get();\n      window.history.replaceState({}, document.title, window.location.origin + window.location.pathname);\n    } catch (err) {\n      console.log('bad query string');\n    }\n  }\n\n  function signout () {\n    userSignedIn.remove();\n    window.location.reload();\n  }\n\n  return (\n    <Router>\n      <header>\n        <div className=\"header-left\">\n          <img src=\"/logo.png\" alt=\"logo\" width=\"30px\"/>\n          &nbsp;\n          <Link to=\"/\" className=\"header-link\">Repo Analytics</Link>\n        </div>\n        <div>\n          {\n            user.username ? \n            <div className=\"dropdown\">\n              <a className=\"header-link\" href>{user.username} <span style={{fontSize:'10px'}}>▼</span></a>\n              <div className=\"dropdown-content\">\n                <a href={`/${user.username}`}>Your profile</a>\n                <a href={`/${user.username}`}>Add repo</a>\n                <a href=\"https://github.com/repo-analytics/repo-analytics.github.io/issues/1\">Pricing</a>\n                <hr/>\n                <a href onClick={signout} >Sign out</a>\n              </div>\n            </div>\n            :\n            <a className=\"header-link\" href=\"https://repo-analytics.t9t.io/auth/github\">Sign in with GitHub</a>\n          }\n          \n          {/* <Link to=\"/topics\">Topics</Link> */}\n        </div>\n      </header>\n      <Route exact path=\"/\" >\n        <Home user={user}/>\n      </Route>\n      <Route path=\"/topics\" component={Topics} />\n      <Route path=\"/about\" component={About} />\n\n      <Route exact path=\"/:username\" component={User} />\n      <Route path=\"/:username/:repo\" component={Repo} />\n    </Router>\n  );\n}\n\nfunction About() {\n  return (\n    <div>\n      <h2>About</h2>\n    </div>\n  );\n}\n\nfunction Topics({ match }) {\n  return (\n    <div>\n      <h2>Topics</h2>\n      <ul>\n        <li>\n          <Link to={`${match.url}/rendering`}>Rendering with React</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/components`}>Components</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/props-v-state`}>Props v. State</Link>\n        </li>\n      </ul>\n\n      <Route path={`${match.path}/:topicId`} component={Topic} />\n      <Route\n        exact\n        path={match.path}\n        render={() => <h3>Please select a topic.</h3>}\n      />\n    </div>\n  );\n}\n\nfunction Topic({ match }) {\n  return (\n    <div>\n      <h3>{match.params.topicId}</h3>\n    </div>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'remixicon/fonts/remixicon.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}