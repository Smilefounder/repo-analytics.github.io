{"version":3,"sources":["utils/userSignedIn.js","components/ProjectCard.js","pages/Home.js","utils/http.js","components/CardLoader.js","components/AddRepo.js","pages/User.js","components/RepoLoader.js","components/VisitChart.js","components/CloneChart.js","pages/Repo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","set","username","token","photo","window","localStorage","setItem","JSON","stringify","get","user","userRaw","getItem","parse","err","remove","removeItem","ProjectCard","repo","createdAt","visitData","className","href","smooth","autoDraw","autoDrawDuration","autoDrawEasing","data","gradient","radius","strokeWidth","strokeLinecap","slice","Home","http","axios","create","baseURL","timeout","headers","getUserRepos","a","res","repos","getRepoTraffic","repoPath","traffic","addRepo","post","MyLoader","height","width","speed","primaryColor","secondaryColor","x","y","rx","ry","AddRepo","localUser","userSignedIn","useState","setRepoPath","isLoading","setIsLoading","location","alert","type","text","response","stay","time","position","placeholder","onChange","e","target","value","onClick","User","match","params","userLocal","setRepos","useEffect","then","CardLoader","map","S","Article","VisitChart","viewsArr","trafficData","views","totalViewsData","timestamp","count","uniqueViewsData","uniques","svg","document","querySelector","chartXkcd","XY","datasets","label","options","xTickCount","yTickCount","legendPosition","config","positionType","upLeft","showLine","timeFormat","dotSize","dataColors","unxkcdify","clonesArr","clones","Repo","setTrafficData","catch","console","log","repoCreatedAt","date","RepoLoader","CloneChart","About","Topics","to","url","path","component","Topic","exact","render","topicId","Boolean","hostname","ReactDOM","search","length","userFromSearch","queryString","history","replaceState","title","origin","pathname","src","alt","style","fontSize","reload","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.caa00cd3.chunk.js","sourcesContent":["/**\n * user: {\n *   username: 'timqian',\n *   token: '',\n *   photo: '',\n * }\n */\n\nfunction set({ username, token, photo }) {\n  window.localStorage.setItem('user', JSON.stringify({\n    username, token, photo\n  }))\n}\n\nfunction get() {\n  let user = {};\n  const userRaw = window.localStorage.getItem('user');\n  if (userRaw) {\n    try {\n      user = JSON.parse(userRaw);\n    } catch (err) {}\n  }\n  return user;\n}\n\nfunction remove() {\n  window.localStorage.removeItem('user');\n}\n\nmodule.exports = {\n  set,\n  get,\n  remove,\n};","import React from 'react';\nimport './ProjectCard.css';\nimport Trend from 'react-trend';\n\n\nconst ProjectCard = ({repo, createdAt, username, visitData}) => (\n  <div className=\"card-container\">\n    <div className=\"card-description\">\n      <a href={`/${repo}`}>{repo}</a>\n    </div>\n\n    <div className=\"project-trend\">\n      <Trend\n        smooth\n        autoDraw\n        autoDrawDuration={2000}\n        autoDrawEasing=\"ease-out\"\n        data={[0,2,5,9,5,10,3,5,0,0,1,8,2,9,0]}\n        gradient={['#d7ecad', '#9cd696', '#2ebc4f']}\n        radius={0}\n        strokeWidth={1.7}\n        strokeLinecap={'square'}\n      />\n    </div>\n\n    <div className=\"card-footer\">\n      Recoding analytics since {createdAt.slice(0, 10)}\n    </div>\n  </div>\n);\n\nexport default ProjectCard;","import React from \"react\";\nimport ProjectCard from '../components/ProjectCard';\nimport './Home.css'\n\nfunction Home ({user}) {\n return (\n  <div>\n    <div className=\"home-hero\">\n      <h1 className=\"home-slogan\">Thorough analytics for your GitHub repos</h1>\n      {\n        !user.username ?\n        <a className=\"home-signin-btn\" href=\"https://repo-analytics.t9t.io/auth/github\">Sign in with GitHub</a>\n        : ''\n      }\n\n      <div className=\"home-features\">\n        <div className=\"home-feature\">\n          <h4 className=\"home-feature-title\">Better traffic data</h4>\n          <p className=\"home-feature-description\">\n            Track traffic to GitHub Repos for longer than 14 days.\n          </p>\n        </div>\n        <div className=\"home-feature\">\n          <h4 className=\"home-feature-title\">Understand your users</h4>\n          <p className=\"home-feature-description\">\n            Analyze history, locations of Star, Clone, Fork data of your GitHub Repos\n          </p>\n        </div>\n      </div>\n\n    </div>\n\n    <div className=\"home-container\">\n      <h2 className=\"home-example-title\">Example repos using <strong>Repo Analytics</strong></h2>\n      <div className=\"home-examples\">\n        <div className=\"home-box\">\n          <ProjectCard repo=\"repo-analytics/repo-analytics.github.io\" username=\"timqian\" createdAt=\"2019-10-09-\"/>\n        </div>\n        <div className=\"home-box\">\n          <ProjectCard repo=\"timqian/chart.xkcd\" username=\"timqian\" createdAt=\"2019-10-09-\"/>\n        </div>\n        <div className=\"home-box\">\n          <ProjectCard repo=\"t9tio/open-source-jobs\" username=\"timqian\" createdAt=\"2019-10-09-\"/>\n        </div>\n        <div className=\"home-box\">\n          <ProjectCard repo=\"timqian/star-history\" username=\"timqian\" createdAt=\"2019-10-09-\"/>\n        </div>\n      </div>\n    </div>\n\n    <hr className=\"home-hr\"/>\n    <div className=\"home-container\">\n      <h2 className=\"home-example-title\">What data do we analyze</h2>\n    </div>\n  </div>\n  );\n}\n\nexport default Home;","import axios from 'axios';\n\nconst userRaw = window.localStorage.getItem('user');\n\nlet token;\nif (userRaw) {\n  const user = JSON.parse(userRaw);\n  token = user.token;\n}\n\nconst http = axios.create({\n  // baseURL: 'https://repo-analytics.t9t.io/',\n  baseURL: 'http://localhost:8080/',\n  timeout: 20000,\n  headers: {\n    token,\n  },\n});\n \nconst getUserRepos = async (username) => {\n  const res = await http.get(`/user/${username}`);\n  return res.data.repos;\n}\n\n/**\n * \n * @param {String} repoPath \n * @param {String} startDate \n * @param {String} endDate \n */\nconst getRepoTraffic = async ({repoPath}) => {\n  const res = await http.get(`/repo/${repoPath}`);\n  return res.data.traffic;\n}\n\nconst addRepo = async ({username, repoPath, token}) => {\n  const res = await http.post('/repo/add', {\n    username, repoPath, token,\n  });\n  return res.data;\n}\n\nexport default {\n  getUserRepos,\n  getRepoTraffic,\n  addRepo,\n};","import React from \"react\"\nimport ContentLoader from \"react-content-loader\"\n\nconst MyLoader = () => (\n  <ContentLoader \n    height={220}\n    width={900}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#d6d6d6\"\n  >\n    <rect x=\"9\" y=\"19\" rx=\"0\" ry=\"0\" width=\"432\" height=\"179\" /> \n    <rect x=\"460\" y=\"19\" rx=\"0\" ry=\"0\" width=\"426\" height=\"179\" /> \n    <rect x=\"494\" y=\"24\" rx=\"0\" ry=\"0\" width=\"0\" height=\"13\" /> \n    <rect x=\"394\" y=\"85\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n  </ContentLoader>\n)\n\nexport default MyLoader;","import React, { useState } from \"react\";\nimport http from \"../utils/http\";\nimport userSignedIn from '../utils/userSignedIn';\nimport './AddRepo.css';\nimport { alert } from 'notie';\n\n\nconst AddRepo = () => {\n  const localUser = userSignedIn.get();\n  const [repoPath, setRepoPath] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n  async function addRepo () {\n    try {\n      setIsLoading(true);\n      await http.addRepo({ username: localUser.username, repoPath, token: localUser.token });\n      window.location = `/${repoPath}`;\n    } catch (err) {\n      setIsLoading(false);\n      alert({\n        type: 'error', // optional, default = 4, enum: [1, 2, 3, 4, 5, 'success', 'warning', 'error', 'info', 'neutral']\n        text: `Failed: \"${err.response.data}\"`,\n        stay: false, // optional, default = false\n        time: 3, // optional, default = 3, minimum = 1,\n        position: 'top' // optional, default = 'top', enum: ['top', 'bottom']\n      })\n    }\n  }\n\n  return <div className=\"home-box\">\n    <div className=\"add-new\">\n      <input placeholder={`e.g. ${localUser.username}/repo-name`} className=\"repo-input\" onChange={(e) => setRepoPath(e.target.value)}></input>\n      <button className={`${isLoading ? 'isLoading' : ''} add-repo-btn`} onClick={() => addRepo()}>\n        {isLoading ? 'Adding' : 'Add repo'}\n      </button>\n    </div>\n  </div>;\n}\n\nexport default AddRepo;","import React, { useEffect, useState } from \"react\";\nimport http from '../utils/http';\nimport ProjectCard from '../components/ProjectCard';\nimport './User.css';\nimport userSignedIn from '../utils/userSignedIn';\nimport CardLoader from '../components/CardLoader';\nimport AddRepo from '../components/AddRepo';\n\nfunction User ({ match }) {\n  const username = match.params.username;\n  const userLocal = userSignedIn.get();\n  const [repos, setRepos] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    http.getUserRepos(username)\n      .then(repos => {\n        setRepos(repos);\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <div className=\"home-container\">\n      <h1 className=\"user-title\">\n        Repos of&nbsp;\n        <a className=\"user-github-link\" href={`https://github.com/${username}`}>\n          {username}\n        </a>\n        <a className=\"user-github-link\" href={`https://github.com/${username}`}>\n          <i className=\"ri-github-line\"></i>\n        </a>\n      </h1>\n      { isLoading ? <CardLoader/> : ''}\n      <div className=\"home-examples\">\n        {\n          repos.map(repo => <div className=\"home-box\">\n            <ProjectCard repo={repo.repo.S} username={repo.username.S} createdAt={repo.createdAt.S}/>\n          </div>)\n        }\n\n        {\n          userLocal.username === username ?\n            <AddRepo /> : ''\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default User;","import React from 'react'\nimport ContentLoader from 'react-content-loader'\n\nconst Article = () => (\n  <ContentLoader\n    height={160}\n    width={400}\n    speed={1}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n  >\n    <rect x=\"0\" y=\"13\" rx=\"4\" ry=\"4\" width=\"400\" height=\"9\" />\n    <rect x=\"0\" y=\"29\" rx=\"4\" ry=\"4\" width=\"100\" height=\"8\" />\n    <rect x=\"0\" y=\"50\" rx=\"4\" ry=\"4\" width=\"400\" height=\"10\" />\n    <rect x=\"0\" y=\"65\" rx=\"4\" ry=\"4\" width=\"400\" height=\"10\" />\n    <rect x=\"0\" y=\"79\" rx=\"4\" ry=\"4\" width=\"100\" height=\"10\" />\n    <rect x=\"0\" y=\"99\" rx=\"5\" ry=\"5\" width=\"400\" height=\"200\" />\n  </ContentLoader>\n)\n\nexport default Article;","import React, { useEffect } from 'react';\nimport chartXkcd from 'chart.xkcd';\nimport './VisitChart.css';\n\nconst VisitChart = ({ trafficData }) => {\n  const viewsArr = trafficData.views;\n\n  const totalViewsData = viewsArr.map(views => ({\n    x: views.timestamp,\n    y: views.count,\n  }));\n  const uniqueViewsData = viewsArr.map(views => ({\n    x: views.timestamp,\n    y: views.uniques,\n  }));\n  useEffect(() => {\n    const svg = document.querySelector('.visit-chart');\n    new chartXkcd.XY(svg, {\n      // title: 'Visitors',\n      data: {\n        datasets: [{\n          label: 'Views',\n          data: totalViewsData,\n        }, {\n          label: 'Unique Visitors',\n          data: uniqueViewsData,\n        }],\n      },\n      options: {\n        xTickCount: 3,\n        yTickCount: 4,\n        legendPosition: chartXkcd.config.positionType.upLeft,\n        showLine: true,\n        timeFormat: 'MM/DD/YYYY',\n        dotSize: 0.5,\n        dataColors: ['#28a745', '#005cc5'],\n        unxkcdify: true\n      },\n    });\n  }, []);\n\n  return <div className=\"chart-container\">\n  <h3 className=\"chart-container-header\"> Visitors </h3>\n  <div className=\"svg-container\">\n    <svg className=\"visit-chart\"></svg>\n  </div>\n</div>\n}\n\nexport default VisitChart;\n","import React, { useEffect } from 'react';\nimport chartXkcd from 'chart.xkcd';\n\nconst VisitChart = ({ trafficData }) => {\n  const clonesArr = trafficData.clones;\n\n  const totalViewsData = clonesArr.map(clones => ({\n    x: clones.timestamp,\n    y: clones.count,\n  }));\n  const uniqueViewsData = clonesArr.map(clones => ({\n    x: clones.timestamp,\n    y: clones.uniques,\n  }));\n  useEffect(() => {\n    const svg = document.querySelector('.clone-chart');\n    new chartXkcd.XY(svg, {\n      // title: 'Git clones',\n      data: {\n        datasets: [{\n          label: 'Clones',\n          data: totalViewsData,\n        }, {\n          label: 'Unique Clones',\n          data: uniqueViewsData,\n        }],\n      },\n      options: {\n        xTickCount: 3,\n        yTickCount: 4,\n        legendPosition: chartXkcd.config.positionType.upLeft,\n        showLine: true,\n        timeFormat: 'MM/DD/YYYY',\n        dotSize: 0.5,\n        dataColors: ['#28a745', '#005cc5'],\n        unxkcdify: true\n      },\n    });\n  }, []);\n\n  return <div className=\"chart-container\">\n    <h3 className=\"chart-container-header\"> Git clones </h3>\n    <div className=\"svg-container\">\n      <svg className=\"clone-chart\"></svg>\n    </div>\n  </div>\n}\n\nexport default VisitChart;\n","import React, { useEffect, useState } from \"react\";\nimport http from '../utils/http';\nimport RepoLoader from \"../components/RepoLoader\";\nimport ProjectCard from '../components/ProjectCard';\nimport './User.css';\nimport userSignedIn from '../utils/userSignedIn';\nimport VisitChart from '../components/VisitChart';\nimport CloneChart from '../components/CloneChart';\nimport './Repo.css';\nimport InfiniteCalendar from 'react-infinite-calendar';\nimport 'react-infinite-calendar/styles.css';\n\nfunction Repo ({ match }) {\n  const username = match.params.username;\n  const repo = match.params.repo;\n  const [trafficData, setTrafficData] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    http.getRepoTraffic({\n      repoPath: `${username}/${repo}`,\n    })\n      .then(traffic => {\n        setTrafficData(traffic);\n        setIsLoading(false);\n      })\n      .catch(err => console.log(err));\n  }, [])\n\n  return (\n    <div >\n      <div className=\"repo-header\">\n        <div className=\"repo-container\">\n          <h1 className=\"repo-title\">\n            <a className=\"user-github-link\" href={`https://github.com/${username}/${repo}`}>\n              {`${username}/${repo}`}<i className=\"ri-github-line\"></i>\n            </a>\n          </h1>\n          <nav className=\"repo-nav\">\n            <a href className=\"selected\">Traffics</a>\n            <a href>Star analytics</a>\n          </nav>\n        </div>\n      </div>\n      <div className=\"repo-container\">\n        {trafficData.repoCreatedAt ? \n          <div className=\"dates-container\">\n            <p>Updated at {trafficData.date}</p>\n            <p>Recoding analytics since {trafficData.repoCreatedAt.slice(0, 10)}</p>\n          </div> \n          : ''}\n        { isLoading ? <RepoLoader/> : ''}\n        { trafficData.views ? <VisitChart trafficData={trafficData}/>  : ''}\n        { trafficData.clones ? <CloneChart trafficData={trafficData}/>  : ''}\n      </div>\n    </div>\n  );\n}\n\nexport default Repo;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport './App.css';\nimport Home from './pages/Home';\nimport User from './pages/User';\nimport Repo from './pages/Repo';\nimport queryString from 'query-string';\nimport userSignedIn from './utils/userSignedIn';\n\nexport default function App() {\n  let user = userSignedIn.get();\n\n  if (window.location.search.length > 0) {\n    try {\n      const userFromSearch = queryString.parse(window.location.search);\n      userSignedIn.set({\n        username: userFromSearch.username,\n        token: userFromSearch.token,\n        photo: userFromSearch.photo\n      });\n      user = userSignedIn.get();\n      window.history.replaceState({}, document.title, window.location.origin + window.location.pathname);\n    } catch (err) {\n      console.log('bad query string');\n    }\n  }\n\n  function signout () {\n    userSignedIn.remove();\n    window.location.reload();\n  }\n\n  return (\n    <Router>\n      <header>\n        <div className=\"header-left\">\n          <img src=\"/logo.png\" alt=\"logo\" width=\"30px\"/>\n          &nbsp;\n          <Link to=\"/\" className=\"header-link\">Repo Analytics</Link>\n        </div>\n        <div>\n          {\n            user.username ? \n            <div className=\"dropdown\">\n              <a className=\"header-link\" href>{user.username} <span style={{fontSize:'10px'}}>▼</span></a>\n              <div className=\"dropdown-content\">\n                <a href={`/${user.username}`}>Your profile</a>\n                <a href={`/${user.username}`}>Add repo</a>\n                <hr/>\n                <a href onClick={signout} >Sign out</a>\n              </div>\n            </div>\n            :\n            <a className=\"header-link\" href=\"https://repo-analytics.t9t.io/auth/github\">Sign in with GitHub</a>\n          }\n          \n          {/* <Link to=\"/topics\">Topics</Link> */}\n        </div>\n      </header>\n      <Route exact path=\"/\" >\n        <Home user={user}/>\n      </Route>\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/topics\" component={Topics} />\n\n      <Route exact path=\"/:username\" component={User} />\n      <Route exact path=\"/:username/:repo\" component={Repo} />\n    </Router>\n  );\n}\n\nfunction About() {\n  return (\n    <div>\n      <h2>About</h2>\n    </div>\n  );\n}\n\nfunction Topics({ match }) {\n  return (\n    <div>\n      <h2>Topics</h2>\n      <ul>\n        <li>\n          <Link to={`${match.url}/rendering`}>Rendering with React</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/components`}>Components</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/props-v-state`}>Props v. State</Link>\n        </li>\n      </ul>\n\n      <Route path={`${match.path}/:topicId`} component={Topic} />\n      <Route\n        exact\n        path={match.path}\n        render={() => <h3>Please select a topic.</h3>}\n      />\n    </div>\n  );\n}\n\nfunction Topic({ match }) {\n  return (\n    <div>\n      <h3>{match.params.topicId}</h3>\n    </div>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'remixicon/fonts/remixicon.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}